from dadata import Dadata
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
API_TOKEN = os.getenv("DADATA_API_KEY")
SECRET = os.getenv("DADATA_SECRET_KEY")

if not API_TOKEN:
    raise RuntimeError("‚ùå DADATA API key is not set. Please define DADATA_API_KEY in your .env file.")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç–∞
dadata = Dadata(API_TOKEN, SECRET)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤
try:
    balance = dadata.get_balance()
    stats = dadata.get_daily_stats()
    used = stats["services"].get("suggestions", 0)
    remaining = stats["remaining"].get("suggestions", 0)

    print(f"üí≥ –ë–∞–ª–∞–Ω—Å: {balance:.2f} ‚ÇΩ")
    print(f"üîç DaData –ª–∏–º–∏—Ç: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ {used}, –æ—Å—Ç–∞–ª–æ—Å—å {remaining}")

    if remaining < 1000:
        print("‚ö†Ô∏è –û—Å—Ç–∞–ª–æ—Å—å –º–∞–ª–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è suggestions! –ü–æ–¥—É–º–∞–π –æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞.")
    if remaining == 0:
        raise RuntimeError("üö´ –õ–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ suggestions –∏—Å—á–µ—Ä–ø–∞–Ω!")

except Exception as e:
    raise RuntimeError(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ª–∏–º–∏—Ç–æ–≤ DaData: {e}")
